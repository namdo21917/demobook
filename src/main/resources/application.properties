spring.application.name=DemoBook
spring.datasource.url= jdbc:postgresql://localhost:5432/demobook
spring.datasource.username= postgres
spring.datasource.password= postgres

## Hibernate Properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Configure Devtools
spring.devtools.add-properties=false

#Configure API Docs - Swagger
springdoc.api-docs.path=/api-docs
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=method

#Configure Port for Server
server.port=8080

#elasticsearch:
#image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
#container_name: elasticsearch_springboot
#environment:
#- bootstrap.memory_lock=true
#- "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#- "discovery.type=single-node"
#- xpack.security.enabled=false
#ports:
#- "9200:9200"
#volumes:
#- elasticsearch_data:/usr/share/elasticsearch/data
#networks:
#- elastic
#
#kibana:
#image: docker.elastic.co/kibana/kibana:8.3.3
#container_name: kibana_springboot
#ports:
#- "5601:5601"
#environment:
#ELASTICSEARCH_URL: http://elasticsearch:9200
#ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
#depends_on:
#- elasticsearch
#networks:
#- elastic
#
#logstash:
#image: docker.elastic.co/logstash/logstash:8.3.3
#container_name: logstash_springboot
#volumes:
#- ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
#- ./logstash/pipeline:/usr/share/logstash/pipeline:ro
#ports:
#- "5044:5044"
#- "5000:5000/tcp"
#- "5000:5000/udp"
#- "9600:9600"
#environment:
#LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#networks:
#- elastic
#depends_on:
#- elasticsearch